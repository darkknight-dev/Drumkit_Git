window.addEventListener("keydown",playSound);

// 
function removeTransition(e){
    console.log(e);
    if(e.propertyName !== 'transform') return; //Skip it if it's not a transform
    console.log(e.propertyName) ;
    console.log(this); // here this is 'key' element which is what called the removeTransition function
    this.classList.remove('playing');
    }



    const keys = document.querySelectorAll('.key');
    console.log(keys);
    // Here each key gets an event listener to it which is transitionend and when the transition is ending
    // we will remove it, now we need to make a function removeTransition
    keys.forEach(key => key.addEventListener('transitionend',removeTransition));  
    
    
    function playSound(e){
         // console.log(e);
    // You'll see the keyboard event which is the object full of data what happened and it'll tell us all kinds 
    // of info like what key was actually hit, but we are concerned with here the key code which is the number
    // associated with that key   
  
    // To access the keyCode of the key directly
    // console.log(e.keyCode);

    // To check if there is an audio element on the page associated with the data dash key of 65 and select it

    const audio = document.querySelector(`audio[data-key="${e.keyCode}"]`);
    const key = document.querySelector(`.key[data-key="${e.keyCode}"]`);

    if(!key) return;
    // console.log(key);

    key.classList.add('playing');
    // If we just add the class playing it just scales up the element but won't be back to it original state
    // So we can add setTimeout(function() {},0.07); but it's not a good practise because in css also we set time for animation transition 
    // and all, if we do this here it might lead to out of sync between css animation and in here....
    // So, we can use transition end event

    
    // console.log(audio);
    if(!audio) return; // If there is no key associated with the day key we specified, stop the function from running all together
    audio.currentTime = 0; //Rewind to the start of the play
    audio.play();
    }



